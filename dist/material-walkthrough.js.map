{"version":3,"file":"material-walkthrough.js","sources":["../src/MaterialWalkthrough.js"],"sourcesContent":["/**\r\n * Copyright 2017 Esset Software LTD.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nconst _logenv = {\r\n    MSG: true,\r\n    WALK_CONTENT: true,\r\n    WALK_CONTENT_TOP: true,\r\n    WALK_LOCK: true,\r\n    WALK_SCROLL: true,\r\n    ALL: true\r\n};\r\n\r\nfunction _log(context, message, ...attrs) {\r\n    if(!!_logenv[context] || _logenv.ALL) console.log(context +': '+ message, ...attrs);\r\n}\r\n\r\nconst dom = {\r\n    get: (target) => {\r\n        if (typeof target === 'string') target = document.querySelector(target);\r\n        return target;\r\n    },\r\n    setStyle: (element, properties) => {\r\n        Object.keys(properties).forEach(function (val) {\r\n            element.style[val] = properties[val];\r\n        });\r\n    },\r\n    appendTo: (element, content) => {\r\n        element.innerHTML += content;\r\n    },\r\n    removeClass: (element, className) => {\r\n        element.classList.remove(className);\r\n    },\r\n    addClass: (element, className) => {\r\n        element.classList.add(className);\r\n    }\r\n};\r\n\r\n// Locking scroll\r\n// Thanks to @galambalazs\r\nconst ScrollManager = {\r\n    // left: 37, up: 38, right: 39, down: 40,\r\n    // spacebar: 32, pageup: 33, pagedown: 34, end: 35, home: 36\r\n    keys: {\r\n        37: 1,\r\n        38: 1,\r\n        39: 1,\r\n        40: 1,\r\n        32: 1,\r\n        33: 1,\r\n        34: 1\r\n    },\r\n\r\n    preventDefault: (e) => {\r\n        e = e || window.event;\r\n        if (e.preventDefault)\r\n            e.preventDefault();\r\n        e.returnValue = false;\r\n    },\r\n    preventDefaultForScrollKeys: (e) => {\r\n        if (ScrollManager.keys[e.keyCode]) {\r\n            ScrollManager.preventDefault(e);\r\n            return false;\r\n        }\r\n    },\r\n    disable: () => {\r\n        dom.setStyle(dom.get('html'),{\r\n            'height': '100vh',\r\n            'overflow': 'hidden'\r\n        });\r\n        const preventDefault = ScrollManager.preventDefault;\r\n        const preventDefaultForScrollKeys = ScrollManager.preventDefaultForScrollKeys;\r\n        if (window.addEventListener) // older FF\r\n            window.addEventListener('DOMMouseScroll', preventDefault, false);\r\n        window.onwheel = preventDefault; // modern standard\r\n        window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE\r\n        window.ontouchmove = preventDefault; // mobile\r\n        document.onkeydown = preventDefaultForScrollKeys;\r\n    },\r\n    enable() {\r\n        dom.setStyle(dom.get('html'),{\r\n            'height': '',\r\n            'overflow': 'auto'\r\n        });\r\n        if (window.removeEventListener)\r\n            window.removeEventListener('DOMMouseScroll', ScrollManager.preventDefault, false);\r\n        window.onmousewheel = document.onmousewheel = null;\r\n        window.onwheel = null;\r\n        window.ontouchmove = null;\r\n        document.onkeydown = null;\r\n    }\r\n};\r\n\r\n\r\n\r\n/**\r\n * A Object that configures an walkpoint.\r\n * @typedef {object} WalkPoint\r\n * @property {string|HTMLElement} target A selector or a pure Element that the walk will focus;\r\n * @property {string} content A HTML code that will be inserted on the walk-content container;\r\n * @property {string} [color] A CSS (rgb, rgba, hex, etc.) color specification that will paint the walk. #2196F3 is default;\r\n * @property {string} [acceptText] The text of the accept button of the walk;\r\n * @property {function} [onSet] A function that will be called when the walk content is setted;\r\n * @property {function} [onClose] A function that will be called when the walk is accepted;\r\n */\r\n\r\n/**\r\n * @license Apache License 2.0.\r\n * @copyright Esset Software LTD.\r\n */\r\nexport default class MaterialWalkthrough {\r\n    static DEFAULT_COLOR = '#2196F3';\r\n    static TRANSITION_DURATION = 500;\r\n    static MIN_SIZE = 60;\r\n    static GUTTER = 20;\r\n    static ELEMENT_TEMPLATE =\r\n        `<div id='walk-wrapper'>\r\n            <div id='walk-content-wrapper'>\r\n                <div id='walk-content'></div>\r\n                <button id='walk-action'></button>\r\n            </div>\r\n        </div>`;\r\n    static isInitialized = false;\r\n\r\n    static _wrapper = null;\r\n    static _contentWrapper = null;\r\n    static _content = null;\r\n    static _actionButton = null;\r\n\r\n    static _instance = {\r\n        updateHandler: null,\r\n        mutationObserver: null,\r\n        points: null,\r\n        currentIndex: null,\r\n        onCloseCallback: null,\r\n    };\r\n\r\n    static _init() {\r\n        dom.appendTo(dom.get('body'), MaterialWalkthrough.ELEMENT_TEMPLATE);\r\n        MaterialWalkthrough._wrapper = dom.get('#walk-wrapper');\r\n        MaterialWalkthrough._contentWrapper = dom.get('#walk-content-wrapper');\r\n        MaterialWalkthrough._content = dom.get('#walk-content');\r\n        MaterialWalkthrough._actionButton = dom.get('#walk-action');\r\n\r\n        MaterialWalkthrough.isInitialized = true;\r\n    }\r\n\r\n    /***\r\n     * Set the opened walker to a target with the properties from walkPoint.\r\n     * @param {string|HTMLElement} target A query or a Element to target the walker\r\n     * @param {WalkPoint} walkPoint The properties for this walker\r\n     */\r\n    static _setWalker(walkPoint) {\r\n        let target = dom.get(walkPoint.target);\r\n        _log('MSG', '-------------------------------------');\r\n        _log('MSG', 'Setting a walk to #' + target.id);\r\n        _log('WALK_SETUP', 'Properties:\\n' + JSON.stringify(walkPoint, null, 2));\r\n\r\n        MaterialWalkthrough._setupListeners(target, walkPoint.onClose);\r\n        dom.setStyle(MaterialWalkthrough._contentWrapper, { display : 'none' });\r\n\r\n        MaterialWalkthrough._locateTarget(target, () => {\r\n            MaterialWalkthrough._setProperties(walkPoint.content, walkPoint.color, walkPoint.acceptText);\r\n            dom.setStyle(MaterialWalkthrough._wrapper, { display : 'block' });\r\n\r\n            MaterialWalkthrough._renderFrame(target, () => {\r\n                dom.addClass(MaterialWalkthrough._wrapper, 'opened');\r\n                MaterialWalkthrough._renderContent(target, () => {\r\n                    dom.setStyle(MaterialWalkthrough._contentWrapper, { display : 'block' });\r\n                });\r\n            });\r\n        });\r\n\r\n        _log('MSG', 'Walk created. Calling onSet() (if exists)');\r\n        if (!!walkPoint.onSet) walkPoint.onSet();\r\n    }\r\n\r\n    /***\r\n     * Create the function that updates the walker to a target\r\n     * @param {HTMLElement} target  The target to set the update function\r\n     * @returns {function} Update handler to call in the listeners\r\n     */\r\n    static _createUpdateHandler(target) {\r\n        _log('WALK_UPDATE', 'Creating UpdateHandler for #' +target.id);\r\n\r\n        const updateHandler = () => {\r\n            _log('MSG', 'Updating and rendering');\r\n            MaterialWalkthrough._locateTarget(target, () => {\r\n                MaterialWalkthrough._renderFrame(target, () => {\r\n                    MaterialWalkthrough._renderContent(target);\r\n                });\r\n            });\r\n        };\r\n        updateHandler.toString = () => {\r\n            return 'updateHandler -> #' + target.id;\r\n        };\r\n        return updateHandler;\r\n    }\r\n\r\n    /***\r\n     * Setup the update listeners (onResize, MutationObserver) and the close callback.\r\n     * @param {HTMLElement} target The target to set the listeners\r\n     * @param {function} onClose Close callback\r\n     */\r\n    static _setupListeners(target, onClose) {\r\n        if(!!MaterialWalkthrough._instance.updateHandler) MaterialWalkthrough._flushListeners();\r\n        MaterialWalkthrough._instance.updateHandler = MaterialWalkthrough._createUpdateHandler(target);\r\n\r\n        window.addEventListener('resize', MaterialWalkthrough._instance.updateHandler);\r\n        MaterialWalkthrough._instance.mutationObserver = new MutationObserver(MaterialWalkthrough._instance.updateHandler);\r\n        //MaterialWalkthrough._instance.mutationObserver.observe(document.body, { childList: true, subtree: true });\r\n\r\n        MaterialWalkthrough._actionButton.addEventListener('click', function actionCallback() {\r\n            if (!!onClose) onClose();\r\n            if (!!MaterialWalkthrough._instance.points && !!MaterialWalkthrough._instance.points[MaterialWalkthrough._instance.currentIndex + 1]) {\r\n                MaterialWalkthrough._instance.currentIndex++;\r\n                MaterialWalkthrough._setWalker(\r\n                    MaterialWalkthrough._instance.points[MaterialWalkthrough._instance.currentIndex].target,\r\n                    MaterialWalkthrough._instance.points[MaterialWalkthrough._instance.currentIndex]);\r\n            } else {\r\n                MaterialWalkthrough._instance.currentIndex = 0;\r\n                MaterialWalkthrough._instance.points = null;\r\n                if(MaterialWalkthrough._instance.onCloseCallback) MaterialWalkthrough._instance.onCloseCallback();\r\n                MaterialWalkthrough._instance.onCloseCallback = null;\r\n                MaterialWalkthrough.closeWalker();\r\n            }\r\n            MaterialWalkthrough._actionButton.removeEventListener('click', actionCallback);\r\n        });\r\n    }\r\n\r\n    /***\r\n     * Clean the listeners with the actual updateHandler\r\n     */\r\n    static _flushListeners() {\r\n        _log('WALK_UPDATER', 'Flushing handlers\\n' + MaterialWalkthrough._instance.updateHandler);\r\n        if(!!MaterialWalkthrough._instance.mutationObserver) MaterialWalkthrough._instance.mutationObserver.disconnect();\r\n        MaterialWalkthrough._instance.mutationObserver = null;\r\n        window.removeEventListener('resize', MaterialWalkthrough._instance.updateHandler);\r\n    }\r\n\r\n    /***\r\n     * Set the properties for the walk.\r\n     * @param {string} content The content that will be displayed in the walk\r\n     * @param {string} color A CSS valid color\r\n     * @param {string} acceptText The text that will be displayed in the accept button\r\n     */\r\n    static _setProperties(content, color, acceptText) {\r\n        color = !!color ? color : MaterialWalkthrough.DEFAULT_COLOR;\r\n        dom.setStyle(MaterialWalkthrough._wrapper, { borderColor: color });\r\n        MaterialWalkthrough._content.innerHTML = content;\r\n        MaterialWalkthrough._actionButton.innerHTML = acceptText;\r\n    }\r\n\r\n    /***\r\n     * Move the Walker to a target\r\n     * @param {HTMLElement} target\r\n     * @param {function} locateCallback\r\n     */\r\n    static _locateTarget(target, locateCallback) {\r\n        const top = target.offsetTop;\r\n        const windowHeight = window.innerHeight;\r\n\r\n        // TODO: Animate Scroll\r\n        const YCoordinate = top - (windowHeight / 2);\r\n\r\n\r\n        _log('WALK_LOCK', 'Moving Scroll to:', top);\r\n        //window.scrollTo(0, YCoordinate);\r\n        setTimeout(function(){window.scrollTo(0,YCoordinate)}, 500);\r\n\r\n        // TODO: Timeout on callback\r\n        if (locateCallback) locateCallback();\r\n    }\r\n\r\n    // TODO: _renderFrame to renderWrapper\r\n    static _renderFrame(target, renderCallback) {\r\n        const position = { top: target.offsetTop, left: target.offsetLeft };\r\n        const { height, width } = target.getClientRects()[0];\r\n\r\n        let holeSize = height > width ? height : width; // Catch the biggest measure\r\n        // Adjust with default min measure if it not higher than it\r\n        if (holeSize < MaterialWalkthrough.MIN_SIZE) holeSize = MaterialWalkthrough.MIN_SIZE;\r\n        _log('WALK_LOCK', 'Walk hole size ' +holeSize+ 'px');\r\n\r\n        dom.setStyle(MaterialWalkthrough._wrapper, {\r\n            height: (holeSize + MaterialWalkthrough.GUTTER) + 'px',\r\n            width: (holeSize + MaterialWalkthrough.GUTTER) + 'px',\r\n\r\n            marginLeft: -((holeSize + MaterialWalkthrough.GUTTER) / 2) + 'px',\r\n            marginTop: -((holeSize + MaterialWalkthrough.GUTTER) / 2) + 'px',\r\n\r\n            left: (position.left + (width / 2)) + 'px',\r\n            top: (position.top + (height / 2)) + 'px',\r\n        });\r\n\r\n        setTimeout(function () {\r\n            renderCallback();\r\n        }, MaterialWalkthrough.TRANSITION_DURATION / 2);\r\n    }\r\n\r\n    static _renderContent(target, renderCallback) {\r\n        const position = target.getBoundingClientRect(); // getClientRects()\r\n\r\n        const itCanBeRenderedInRight =\r\n            position.left + (MaterialWalkthrough._wrapper.offsetWidth - MaterialWalkthrough.GUTTER)\r\n            + MaterialWalkthrough._contentWrapper.offsetWidth < window.innerWidth;\r\n        const itCanBeRenderedInLeft = (position.left - MaterialWalkthrough.GUTTER) - MaterialWalkthrough._contentWrapper.offsetWidth > 0;\r\n\r\n        const itCanBeRenderedInTop =\r\n            MaterialWalkthrough._wrapper.getBoundingClientRect().top\r\n            - MaterialWalkthrough._contentWrapper.offsetHeight > 0;\r\n        const itCanBeRenderedInBottom =\r\n            MaterialWalkthrough._wrapper.getBoundingClientRect().top\r\n            + MaterialWalkthrough._contentWrapper.offsetHeight + MaterialWalkthrough._contentWrapper.offsetHeight\r\n            < window.innerHeight;\r\n\r\n        _log('WALK_CONTENT', 'itCanBeRenderedInRight: ' +itCanBeRenderedInRight);\r\n        _log('WALK_CONTENT', 'itCanBeRenderedInLeft: ' +itCanBeRenderedInLeft);\r\n        _log('WALK_CONTENT', 'itCanBeRenderedInTop: ' +itCanBeRenderedInTop);\r\n        _log('WALK_CONTENT', 'itCanBeRenderedInBottom: ' +itCanBeRenderedInBottom);\r\n\r\n        let left = '100%';\r\n        let top = '100%';\r\n        let marginTop = 0;\r\n        let marginLeft = 0;\r\n        let textAlign = 'left';\r\n\r\n        if (!itCanBeRenderedInRight) {\r\n            left = itCanBeRenderedInLeft ? '-'+ MaterialWalkthrough._contentWrapper.offsetWidth +'px'\r\n                : (itCanBeRenderedInBottom ? '0%':  '25%');\r\n            textAlign = itCanBeRenderedInLeft ? 'right' : 'center';\r\n            marginTop = itCanBeRenderedInLeft ? 0 : (itCanBeRenderedInBottom ? '20px' : '-20px');\r\n        }\r\n        if (!itCanBeRenderedInBottom) {\r\n            top = itCanBeRenderedInTop ? '-'+ MaterialWalkthrough._contentWrapper.offsetHeight +'px'\r\n                : MaterialWalkthrough._wrapper.offsetHeight / 2 - MaterialWalkthrough._contentWrapper.offsetHeight / 2 + 'px';\r\n            marginLeft = itCanBeRenderedInTop ? 0 : (!itCanBeRenderedInRight ? '-20px' : '20px');\r\n        }\r\n        dom.setStyle(MaterialWalkthrough._contentWrapper, { left, top, textAlign, marginTop, marginLeft });\r\n\r\n        if(renderCallback) renderCallback();\r\n    }\r\n\r\n    static walk(walkPoints, callback) {\r\n        MaterialWalkthrough._instance.points = walkPoints;\r\n        MaterialWalkthrough._instance.currentIndex = 0;\r\n        MaterialWalkthrough._instance.onCloseCallback = callback;\r\n        MaterialWalkthrough.to(walkPoints[0]);\r\n    };\r\n\r\n    /***\r\n     * Open the walker to a walkpoint.\r\n     * @param {WalkPoint} walkPoint The configuration of the walkpoint\r\n     */\r\n    static to(walkPoint) {\r\n        ScrollManager.disable();\r\n        if (!MaterialWalkthrough.isInitialized) MaterialWalkthrough._init();\r\n        dom.removeClass(MaterialWalkthrough._wrapper, 'closed');\r\n        MaterialWalkthrough._setWalker(walkPoint);\r\n    }\r\n\r\n    /***\r\n     * Close the walker and flush its Listeners.\r\n     */\r\n    static closeWalker() {\r\n        _log('MSG', 'Closing Walker');\r\n        MaterialWalkthrough._flushListeners();\r\n        ScrollManager.enable();\r\n\r\n        dom.setStyle(MaterialWalkthrough._wrapper, { marginTop: '-500px', marginLeft: '-500px' });\r\n        dom.addClass(MaterialWalkthrough._wrapper, 'closed');\r\n        setTimeout(() => {\r\n            dom.setStyle(MaterialWalkthrough._wrapper, { display: 'none' });\r\n            dom.removeClass(MaterialWalkthrough._wrapper, 'opened');\r\n            _log('MSG', 'Walker Closed!');\r\n        }, MaterialWalkthrough.TRANSITION_DURATION);\r\n    }\r\n}\r\n"],"names":["_logenv","_log","context","message","attrs","ALL","log","dom","target","document","querySelector","element","properties","keys","forEach","val","style","content","innerHTML","className","classList","remove","add","ScrollManager","e","window","event","preventDefault","returnValue","keyCode","setStyle","get","preventDefaultForScrollKeys","addEventListener","onwheel","onmousewheel","ontouchmove","onkeydown","removeEventListener","MaterialWalkthrough","appendTo","ELEMENT_TEMPLATE","_wrapper","_contentWrapper","_content","_actionButton","isInitialized","walkPoint","id","JSON","stringify","_setupListeners","onClose","display","_locateTarget","_setProperties","color","acceptText","_renderFrame","addClass","_renderContent","onSet","updateHandler","toString","_instance","_flushListeners","_createUpdateHandler","mutationObserver","MutationObserver","actionCallback","points","currentIndex","_setWalker","onCloseCallback","closeWalker","disconnect","DEFAULT_COLOR","borderColor","locateCallback","top","offsetTop","windowHeight","innerHeight","YCoordinate","scrollTo","renderCallback","position","left","offsetLeft","getClientRects","height","width","holeSize","MIN_SIZE","GUTTER","TRANSITION_DURATION","getBoundingClientRect","itCanBeRenderedInRight","offsetWidth","innerWidth","itCanBeRenderedInLeft","itCanBeRenderedInTop","offsetHeight","itCanBeRenderedInBottom","marginTop","marginLeft","textAlign","walkPoints","callback","to","disable","_init","removeClass","enable"],"mappings":"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"}