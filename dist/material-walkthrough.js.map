{"version":3,"file":"material-walkthrough.js","sources":["../src/DOMUtils.js","../src/ScrollManager.js","../src/MaterialWalkthrough.js"],"sourcesContent":["/**\n * Utils used to manipulate DOM.\n */\nexport default class DOMUtils {\n\n  /**\n   * Query for a element in the Document with querySelector. If the target is already a HTMLElement, it bypass.\n   * @param {(string|HTMLElement)} target THe query in CSS selector syntax to match a Element from Document. Or it can be an element already, that will bypass.\n   * @returns {HTMLElement}\n   */\n  static get(target) {\n    if (typeof target === 'string') return document.querySelector(target);\n    return target;\n  }\n\n  /**\n   * Set a new style to an HTMLElement.\n   * @param {HTMLElement} element The target element to apply the style.\n   * @param properties\n   */\n  static setStyle(element, properties) {\n    Object.keys(properties).forEach(function (val) {\n      element.style[val] = properties[val];\n    });\n  }\n\n  /**\n   * Append a new element to an target using HTMLString.\n   * @param {HTMLElement} element The target element.\n   * @param {HTMLString|string} content A valid string based on HTMLString to append into the element.\n   */\n  static appendTo(element, content) {\n    const tmpElt = document.createElement('div');\n    tmpElt.innerHTML = content;\n    element.appendChild(tmpElt.children[0]);\n  }\n\n  /**\n   * Remove a specific class from classList of a target element.\n   * @param {HTMLElement} element The target element.\n   * @param {string} className The class to remove.\n   */\n  static removeClass(element, className) {\n    element.classList.remove(className);\n  }\n\n  /**\n   * Add a specific class from classList of a target element.\n   * @param {HTMLElement} element The target element.\n   * @param {string} className The class to add.\n   */\n  static addClass(element, className) {\n    element.classList.add(className);\n  }\n}\n","import dom from './DOMUtils';\n\n// Thanks to @galambalazs\n/**\n * Controls the state of scroll actions.\n */\nexport default class ScrollManager {\n  // left: 37, up: 38, right: 39, down: 40,\n  // spacebar: 32, pageup: 33, pagedown: 34, end: 35, home: 36\n  static keys = {\n    37: 1,\n    38: 1,\n    39: 1,\n    40: 1,\n    32: 1,\n    33: 1,\n    34: 1\n  };\n\n  static preventDefault(e) {\n    e = e || window.event;\n    if (e.preventDefault)\n      e.preventDefault();\n    e.returnValue = false;\n  }\n\n  static preventDefaultForScrollKeys(e) {\n    if (ScrollManager.keys[e.keyCode]) {\n      ScrollManager.preventDefault(e);\n      return false;\n    }\n  }\n\n  static disable() {\n    dom.setStyle(dom.get('html'),{\n      'height': '100vh',\n      'overflow': 'hidden'\n    });\n    const preventDefault = ScrollManager.preventDefault;\n    const preventDefaultForScrollKeys = ScrollManager.preventDefaultForScrollKeys;\n    if (window.addEventListener) // older FF\n      window.addEventListener('DOMMouseScroll', preventDefault, false);\n    window.onwheel = preventDefault; // modern standard\n    window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE\n    window.ontouchmove = preventDefault; // mobile\n    document.onkeydown = preventDefaultForScrollKeys;\n  }\n\n  static enable() {\n    dom.setStyle(dom.get('html'),{\n      'height': '',\n      'overflow': 'auto'\n    });\n    if (window.removeEventListener)\n      window.removeEventListener('DOMMouseScroll', ScrollManager.preventDefault, false);\n    window.onmousewheel = document.onmousewheel = null;\n    window.onwheel = null;\n    window.ontouchmove = null;\n    document.onkeydown = null;\n  }\n};\n","/**\n * Copyright 2017 Esset Software LTD.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport dom from './DOMUtils';\nimport ScrollManager from './ScrollManager';\nimport './style.css';\n\n/**\n * A key-value object that configs the log level of _log function.\n * @private\n */\nconst _logenv = {\n  MSG: true,\n  WALK_CONTENT: true,\n  WALK_CONTENT_TOP: true,\n  WALK_LOCK: true,\n  WALK_SCROLL: true,\n  ALL: true\n};\n\n/**\n * Log with context based in _logenv.\n * @param {string} context The context to dispatch this log.\n * @param {string} message The verbose message.\n * @param {*} [attrs] Optional custom metadatas to display.\n * @private\n */\nfunction _log(context, message, ...attrs) {\n  if(!!_logenv[context] || _logenv.ALL) console.log(context +': '+ message, ...attrs);\n}\n\n/**\n * A class that configures an walkpoint.\n * @typedef {object} WalkPoint\n * @property {string|HTMLElement} target A selector or a pure Element that the walk will focus;\n * @property {string} content A HTML code that will be inserted on the walk-content container;\n * @property {string} [color] A CSS (rgb, rgba, hex, etc.) color specification that will paint the walk. #2196F3 is default;\n * @property {string} [acceptText] The text of the accept button of the walk;\n * @property {function} [onSet] A function that will be called when the walk content is setted;\n * @property {function} [onClose] A function that will be called when the walk is accepted;\n */\n\n/**\n * A material tour (eg Inbox from Google) for your site, enhancing the UX.\n * Basic usage:\n * ``` js\n * import MaterialWalkthrough from '@essetwide/material-walkthrough';\n *\n * MaterialWalkthrough.walk([\n *   {\n *     target: '#example1',\n *     content: 'My First Walkthrough!',\n *     acceptText: 'YEAH!'\n *   }\n * ]);\n * ```\n * @license Apache License 2.0.\n * @copyright Esset Software LTD.\n */\nexport default class MaterialWalkthrough {\n  /**\n   * Cache the current height size of the document.\n   * Calculated by `document.querySelector('html').offsetHeight` at `MaterialWalkthrough.to` method.\n   * @type {number}\n   */\n  static CURRENT_DOCUMENT_HEIGHT = 0;\n\n  /**\n   * Default color used if none is passed in the walkpoint.\n   * It need to be a valid HEX or RGB color because it will be useful on contrast calculations.\n   * @type {string}\n   */\n  static DEFAULT_COLOR = '#2196F3';\n\n  /**\n   * Default accept text if none is passed in the walkpoint.\n   * @type {string}\n   */\n  static DEFAULT_ACCEPT_TEXT = 'Ok';\n\n  /**\n   * The duration of any animation. It needs to be the same as defined at the style.\n   * Is used in some timeouts to wait a specific transition.\n   * @type {number}\n   */\n  static TRANSITION_DURATION = 500;\n  static DISABLE_HUGE_ANIMATIONS = false;\n  static FORCE_SMALL_BORDER = false;\n  static MIN_SIZE = 60;\n  static GUTTER = 20;\n  static ELEMENT_TEMPLATE =\n    `<div id='walk-wrapper' class='${MaterialWalkthrough.DISABLE_HUGE_ANIMATIONS ? 'animations-disabled' : ''} ${MaterialWalkthrough.FORCE_SMALL_BORDER ? 'small' : ''}'>\n      <div id='walk-content-wrapper'>\n        <div id='walk-content'></div>\n        <button id='walk-action'></button>\n      </div>\n    </div>`;\n  static isInitialized = false;\n\n  static _wrapper = null;\n  static _contentWrapper = null;\n  static _content = null;\n  static _actionButton = null;\n\n    static _instance = {\n        updateHandler: null,\n        mutationObserver: null,\n        points: null,\n        currentIndex: null,\n        onCloseCallback: null,\n    };\n\n    static _init() {\n        dom.appendTo(dom.get('body'), MaterialWalkthrough.ELEMENT_TEMPLATE);\n        MaterialWalkthrough._wrapper = dom.get('#walk-wrapper');\n        MaterialWalkthrough._contentWrapper = dom.get('#walk-content-wrapper');\n        MaterialWalkthrough._content = dom.get('#walk-content');\n        MaterialWalkthrough._actionButton = dom.get('#walk-action');\n\n        if (MaterialWalkthrough.DISABLE_HUGE_ANIMATIONS) dom.addClass(MaterialWalkthrough._wrapper, 'animations-disabled');\n        if (MaterialWalkthrough.FORCE_SMALL_BORDER) dom.addClass(MaterialWalkthrough._wrapper, 'small');\n\n        MaterialWalkthrough.isInitialized = true;\n    }\n\n    /***\n     * Set the opened walker to a target with the properties from walkPoint.\n     * @param {string|HTMLElement} target A query or a Element to target the walker\n     * @param {WalkPoint} walkPoint The properties for this walker\n     */\n    static _setWalker(walkPoint) {\n        let target = dom.get(walkPoint.target);\n        _log('MSG', '-------------------------------------');\n        _log('MSG', 'Setting a walk to #' + target.id);\n        _log('WALK_SETUP', 'Properties:\\n' + JSON.stringify(walkPoint, null, 2));\n\n        MaterialWalkthrough._setupListeners(target, walkPoint.onClose);\n        dom.setStyle(MaterialWalkthrough._contentWrapper, { display : 'none' });\n\n        MaterialWalkthrough._locateTarget(target, () => {\n            MaterialWalkthrough._setProperties(walkPoint.content, walkPoint.color, walkPoint.acceptText);\n            dom.setStyle(MaterialWalkthrough._wrapper, { display : 'block' });\n\n            MaterialWalkthrough._renderFrame(target, () => {\n                dom.addClass(MaterialWalkthrough._wrapper, 'opened');\n                MaterialWalkthrough._renderContent(target, () => {\n                    dom.setStyle(MaterialWalkthrough._contentWrapper, { display : 'block' });\n                });\n\n                // Pequeno XGH\n                MaterialWalkthrough._renderContent(target, () => {\n                  dom.setStyle(MaterialWalkthrough._contentWrapper, { display : 'block' });\n                });\n            });\n        });\n\n        _log('MSG', 'Walk created. Calling onSet() (if exists)');\n        if (!!walkPoint.onSet) walkPoint.onSet();\n    }\n\n    /***\n     * Create the function that updates the walker to a target\n     * @param {HTMLElement} target  The target to set the update function\n     * @returns {function} Update handler to call in the listeners\n     */\n    static _createUpdateHandler(target) {\n        _log('WALK_UPDATE', 'Creating UpdateHandler for #' +target.id);\n\n        const updateHandler = () => {\n            _log('MSG', 'Updating and rendering');\n            MaterialWalkthrough._locateTarget(target, () => {\n                MaterialWalkthrough._renderFrame(target, () => {\n                    MaterialWalkthrough._renderContent(target);\n                });\n            });\n        };\n        updateHandler.toString = () => {\n            return 'updateHandler -> #' + target.id;\n        };\n        return updateHandler;\n    }\n\n    /***\n     * Setup the update listeners (onResize, MutationObserver) and the close callback.\n     * @param {HTMLElement} target The target to set the listeners\n     * @param {function} onClose Close callback\n     */\n    static _setupListeners(target, onClose) {\n        if(!!MaterialWalkthrough._instance.updateHandler) MaterialWalkthrough._flushListeners();\n        MaterialWalkthrough._instance.updateHandler = MaterialWalkthrough._createUpdateHandler(target);\n\n        window.addEventListener('resize', MaterialWalkthrough._instance.updateHandler);\n        MaterialWalkthrough._instance.mutationObserver = new MutationObserver(MaterialWalkthrough._instance.updateHandler);\n        MaterialWalkthrough._instance.mutationObserver.observe(document.body, { childList: true, subtree: true });\n\n        MaterialWalkthrough._actionButton.addEventListener('click', function actionCallback() {\n            const hasNext = !!MaterialWalkthrough._instance.points && !!MaterialWalkthrough._instance.points[MaterialWalkthrough._instance.currentIndex + 1];\n            const next = () => {\n              if (hasNext) {\n                MaterialWalkthrough._instance.currentIndex++;\n                MaterialWalkthrough._setWalker(\n                  MaterialWalkthrough._instance.points[MaterialWalkthrough._instance.currentIndex]\n                );\n              } else {\n                MaterialWalkthrough._instance.currentIndex = 0;\n                MaterialWalkthrough._instance.points = null;\n                if(MaterialWalkthrough._instance.onCloseCallback) MaterialWalkthrough._instance.onCloseCallback();\n                MaterialWalkthrough._instance.onCloseCallback = null;\n                MaterialWalkthrough.closeWalker();\n              }\n              MaterialWalkthrough._actionButton.removeEventListener('click', actionCallback);\n            };\n\n            if (!!onClose) onClose();\n            // Responsive metrics (According the style.css)\n            // TODO: Refact this. Turn into a separated function.\n            if (MaterialWalkthrough.FORCE_SMALL_BORDER || MaterialWalkthrough.DISABLE_HUGE_ANIMATIONS) {\n              dom.addClass(MaterialWalkthrough._wrapper, 'transiting');\n              dom.setStyle(MaterialWalkthrough._contentWrapper, { display : 'none' });\n              setTimeout(() => {\n                dom.removeClass(MaterialWalkthrough._wrapper, 'transiting');\n                next();\n              }, MaterialWalkthrough.TRANSITION_DURATION);\n            } else next();\n        });\n    }\n\n    /***\n     * Clean the listeners with the actual updateHandler\n     */\n    static _flushListeners() {\n        _log('WALK_UPDATER', 'Flushing handlers\\n' + MaterialWalkthrough._instance.updateHandler);\n        if(!!MaterialWalkthrough._instance.mutationObserver) MaterialWalkthrough._instance.mutationObserver.disconnect();\n        MaterialWalkthrough._instance.mutationObserver = null;\n        window.removeEventListener('resize', MaterialWalkthrough._instance.updateHandler);\n    }\n\n    /***\n     * Set the properties for the walk.\n     * @param {string} content The content that will be displayed in the walk\n     * @param {string} color A CSS valid color\n     * @param {string} acceptText The text that will be displayed in the accept button\n     */\n    static _setProperties(content, color, acceptText) {\n        color = !!color ? color : MaterialWalkthrough.DEFAULT_COLOR;\n        dom.setStyle(MaterialWalkthrough._wrapper, { borderColor: color });\n        MaterialWalkthrough._content.innerHTML = content;\n        MaterialWalkthrough._actionButton.innerHTML = acceptText || MaterialWalkthrough.DEFAULT_ACCEPT_TEXT;\n    }\n\n    /***\n     * Move the Walker to a target\n     * @param {HTMLElement} target\n     * @param {function} locateCallback\n     */\n    static _locateTarget(target, locateCallback) {\n        const top = target.offsetTop;\n        const windowHeight = window.innerHeight;\n        const maxScrollValue = MaterialWalkthrough.CURRENT_DOCUMENT_HEIGHT - window.innerHeight;\n\n        const { height, width } = target.getClientRects()[0];\n        let holeSize = height > width ? height : width;\n        const YCoordinate = top - (windowHeight / 2) + (holeSize / 2);\n        const secureYCoordinate = YCoordinate > maxScrollValue ? maxScrollValue : YCoordinate;\n\n\n        _log('WALK_LOCK', 'Moving Scroll to:', secureYCoordinate);\n        _log('WALK_LOCK', 'windowHeight:', windowHeight);\n        setTimeout(() => window.scrollTo(0, secureYCoordinate), 0);\n\n        // TODO: Timeout on callback\n        if (locateCallback) locateCallback();\n    }\n\n    // TODO: _renderFrame to renderWrapper\n    static _renderFrame(target, renderCallback) {\n        // HAVING ISSUES IN SOME TESTS\n        // const position = { top: target.offsetTop, left: target.offsetLeft };\n\n        /* @TODO: Can be simplified. Duplied usage. */\n        const { height, width, top, left } = target.getClientRects()[0];\n\n        let holeSize = height > width ? height : width; // Catch the biggest measure\n        // Adjust with default min measure if it not higher than it\n        if (holeSize < MaterialWalkthrough.MIN_SIZE) holeSize = MaterialWalkthrough.MIN_SIZE;\n        _log('WALK_LOCK', 'Walk hole size ' +holeSize+ 'px');\n\n        const positions = {\n          height: (holeSize + MaterialWalkthrough.GUTTER) + 'px',\n          width: (holeSize + MaterialWalkthrough.GUTTER) + 'px',\n\n          marginLeft: -((holeSize + MaterialWalkthrough.GUTTER) / 2) + 'px',\n          marginTop: -((holeSize + MaterialWalkthrough.GUTTER) / 2) + 'px',\n\n          left: (left + (width / 2)) + 'px',\n          top: (top + (height / 2)) + 'px',\n        };\n        dom.setStyle(MaterialWalkthrough._wrapper, positions);\n        _log('WALK_LOCK', 'Positioning \\n'+ JSON.stringify(positions, 2));\n\n        setTimeout(function () {\n            renderCallback();\n        }, MaterialWalkthrough.TRANSITION_DURATION + 50);\n    }\n\n    static _renderContent(target, renderCallback) {\n        const position = MaterialWalkthrough._wrapper.getBoundingClientRect(); // target.getBoundingClientRect(); // target.getClientRects()[0];\n\n        const itCanBeRenderedInRight =\n            position.x + (MaterialWalkthrough._wrapper.offsetWidth - MaterialWalkthrough.GUTTER)\n            + MaterialWalkthrough._contentWrapper.offsetWidth < window.innerWidth;\n        const itCanBeRenderedInLeft = (position.x + MaterialWalkthrough.GUTTER) - MaterialWalkthrough._contentWrapper.offsetWidth > 0;\n\n        const itCanBeRenderedInTop =\n          position.y\n            - MaterialWalkthrough._contentWrapper.offsetHeight > 0;\n        const itCanBeRenderedInBottom =\n          position.y\n            + MaterialWalkthrough._contentWrapper.offsetHeight + MaterialWalkthrough._contentWrapper.offsetHeight\n            < window.innerHeight;\n\n        _log('WALK_CONTENT', 'itCanBeRenderedInRight: ' +itCanBeRenderedInRight);\n        _log('WALK_CONTENT', 'itCanBeRenderedInLeft: ' +itCanBeRenderedInLeft);\n        _log('WALK_CONTENT', 'itCanBeRenderedInTop: ' +itCanBeRenderedInTop);\n        _log('WALK_CONTENT', 'itCanBeRenderedInBottom: ' +itCanBeRenderedInBottom);\n\n        let left = '100%';\n        let top = '100%';\n        let marginTop = 0;\n        let marginLeft = 0;\n        let textAlign = 'left';\n\n        if (!itCanBeRenderedInRight) {\n            left = itCanBeRenderedInLeft ? '-'+ MaterialWalkthrough._contentWrapper.offsetWidth +'px'\n                : 'calc(50% - 100px)';\n            textAlign = itCanBeRenderedInLeft ? 'right' : 'center';\n            marginTop = itCanBeRenderedInLeft ? 0 : (itCanBeRenderedInBottom ? '20px' : '-20px');\n        }\n        if (!itCanBeRenderedInBottom) {\n            top = itCanBeRenderedInTop ? '-'+ MaterialWalkthrough._contentWrapper.offsetHeight +'px'\n                : MaterialWalkthrough._wrapper.offsetHeight / 2 - MaterialWalkthrough._contentWrapper.offsetHeight / 2 + 'px';\n            marginLeft = itCanBeRenderedInTop ? 0 : (!itCanBeRenderedInRight ? '-20px' : '20px');\n        }\n        dom.setStyle(MaterialWalkthrough._contentWrapper, { left, top, textAlign, marginTop, marginLeft });\n\n        if(renderCallback) renderCallback();\n    }\n\n    static walk(walkPoints, callback) {\n        MaterialWalkthrough._instance.points = walkPoints;\n        MaterialWalkthrough._instance.currentIndex = 0;\n        MaterialWalkthrough._instance.onCloseCallback = callback;\n        MaterialWalkthrough.to(walkPoints[0]);\n    };\n\n    /***\n     * Open the walker to a walkpoint.\n     * @param {WalkPoint} walkPoint The configuration of the walkpoint\n     */\n    static to(walkPoint) {\n        MaterialWalkthrough.CURRENT_DOCUMENT_HEIGHT = document.querySelector('html').offsetHeight;\n        ScrollManager.disable();\n        if (!MaterialWalkthrough.isInitialized) MaterialWalkthrough._init();\n        dom.removeClass(MaterialWalkthrough._wrapper, 'closed');\n        MaterialWalkthrough._setWalker(walkPoint);\n    }\n\n    /***\n     * Close the walker and flush its Listeners.\n     */\n    static closeWalker() {\n        _log('MSG', 'Closing Walker');\n        MaterialWalkthrough._flushListeners();\n        ScrollManager.enable();\n\n        dom.setStyle(MaterialWalkthrough._wrapper, { marginTop: '-500px', marginLeft: '-500px' });\n        dom.addClass(MaterialWalkthrough._wrapper, 'closed');\n        setTimeout(() => {\n            dom.setStyle(MaterialWalkthrough._wrapper, { display: 'none' });\n            dom.removeClass(MaterialWalkthrough._wrapper, 'opened');\n            _log('MSG', 'Walker Closed!');\n        }, MaterialWalkthrough.TRANSITION_DURATION);\n    }\n}\n"],"names":["DOMUtils","target","document","querySelector","element","properties","keys","forEach","val","style","content","tmpElt","createElement","innerHTML","appendChild","children","className","classList","remove","add","ScrollManager","e","window","event","preventDefault","returnValue","keyCode","setStyle","dom","get","preventDefaultForScrollKeys","addEventListener","onwheel","onmousewheel","ontouchmove","onkeydown","removeEventListener","_logenv","_log","context","message","attrs","ALL","log","MaterialWalkthrough","appendTo","ELEMENT_TEMPLATE","_wrapper","_contentWrapper","_content","_actionButton","DISABLE_HUGE_ANIMATIONS","addClass","FORCE_SMALL_BORDER","isInitialized","walkPoint","id","JSON","stringify","_setupListeners","onClose","display","_locateTarget","_setProperties","color","acceptText","_renderFrame","_renderContent","onSet","updateHandler","toString","_instance","_flushListeners","_createUpdateHandler","mutationObserver","MutationObserver","observe","body","childList","subtree","actionCallback","hasNext","points","currentIndex","next","_setWalker","onCloseCallback","closeWalker","removeClass","TRANSITION_DURATION","disconnect","DEFAULT_COLOR","borderColor","DEFAULT_ACCEPT_TEXT","locateCallback","top","offsetTop","windowHeight","innerHeight","maxScrollValue","CURRENT_DOCUMENT_HEIGHT","getClientRects","height","width","holeSize","YCoordinate","secureYCoordinate","scrollTo","renderCallback","left","MIN_SIZE","positions","GUTTER","position","getBoundingClientRect","itCanBeRenderedInRight","x","offsetWidth","innerWidth","itCanBeRenderedInLeft","itCanBeRenderedInTop","y","offsetHeight","itCanBeRenderedInBottom","marginTop","marginLeft","textAlign","walkPoints","callback","to","disable","_init","enable"],"mappings":"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"}