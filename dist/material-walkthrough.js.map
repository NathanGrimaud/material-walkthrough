{"version":3,"file":"material-walkthrough.js","sources":["../src/DOMUtils.js","../src/ScrollManager.js","../src/MaterialWalkthrough.js"],"sourcesContent":["/**\n * Utils used to manipulate DOM.\n */\nexport default class DOMUtils {\n\n  /**\n   * Query for a element in the Document with querySelector. If the target is already a HTMLElement, it bypass.\n   * @param {(string|HTMLElement)} target THe query in CSS selector syntax to match a Element from Document. Or it can be an element already, that will bypass.\n   * @returns {HTMLElement}\n   */\n  static get(target) {\n    if (typeof target === 'string') return document.querySelector(target);\n    return target;\n  }\n\n  /**\n   * Set a new style to an HTMLElement.\n   * @param {HTMLElement} element The target element to apply the style.\n   * @param properties\n   */\n  static setStyle(element, properties) {\n    Object.keys(properties).forEach(function (val) {\n      element.style[val] = properties[val];\n    });\n  }\n\n  /**\n   * Append a new element to an target using HTMLString.\n   * @param {HTMLElement} element The target element.\n   * @param {HTMLString|string} content A valid string based on HTMLString to append into the element.\n   */\n  static appendTo(element, content) {\n    const tmpElt = document.createElement('div');\n    tmpElt.innerHTML = content;\n    element.appendChild(tmpElt.children[0]);\n  }\n\n  /**\n   * Remove a specific class from classList of a target element.\n   * @param {HTMLElement} element The target element.\n   * @param {string} className The class to remove.\n   */\n  static removeClass(element, className) {\n    element.classList.remove(className);\n  }\n\n  /**\n   * Add a specific class from classList of a target element.\n   * @param {HTMLElement} element The target element.\n   * @param {string} className The class to add.\n   */\n  static addClass(element, className) {\n    element.classList.add(className);\n  }\n}\n","import dom from './DOMUtils';\n\n/**\n * Controls the state of scroll actions.\n * Thanks to @galambalazs.\n */\nexport default class ScrollManager {\n\n  /**\n   * A map object that list, enable/disable each keys that manipulate the scroll into the window.\n   * left: 37, up: 38, right: 39, down: 40,\n   * spacebar: 32, pageup: 33, pagedown: 34, end: 35, home: 36\n   * @type {object}\n   */\n  static keys = {\n    37: 1,\n    38: 1,\n    39: 1,\n    40: 1,\n    32: 1,\n    33: 1,\n    34: 1\n  };\n\n  static preventDefault(e) {\n    e = e || window.event;\n    if (e.preventDefault)\n      e.preventDefault();\n    e.returnValue = false;\n  }\n\n  static preventDefaultForScrollKeys(e) {\n    if (ScrollManager.keys[e.keyCode]) {\n      ScrollManager.preventDefault(e);\n      return false;\n    }\n  }\n\n  /**\n   * Override the main listeners, disabling the scroll for each enabled key in `keys` object.\n   * Also, set `height: 100vh` and `overflow: hidden` in the `html` element, forcing the content size to match\n   * with the window.\n   */\n  static disable() {\n    dom.setStyle(dom.get('html'),{\n      'height': '100vh',\n      'overflow': 'hidden'\n    });\n    const preventDefault = ScrollManager.preventDefault;\n    const preventDefaultForScrollKeys = ScrollManager.preventDefaultForScrollKeys;\n    if (window.addEventListener) // older FF\n      window.addEventListener('DOMMouseScroll', preventDefault, false);\n    window.onwheel = preventDefault; // modern standard\n    window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE\n    window.ontouchmove = preventDefault; // mobile\n    document.onkeydown = preventDefaultForScrollKeys;\n  }\n\n  /**\n   * Reset the main listeners, enabling the scroll.\n   * Also reset the html element styles assigned before in `disable` function.\n   */\n  static enable() {\n    dom.setStyle(dom.get('html'),{\n      'height': '',\n      'overflow': 'auto'\n    });\n    if (window.removeEventListener)\n      window.removeEventListener('DOMMouseScroll', ScrollManager.preventDefault, false);\n    window.onmousewheel = document.onmousewheel = null;\n    window.onwheel = null;\n    window.ontouchmove = null;\n    document.onkeydown = null;\n  }\n};\n","/**\n * Copyright 2017 Esset Software LTD.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport dom from './DOMUtils';\nimport ScrollManager from './ScrollManager';\nimport './style.css';\n\n/**\n * A key-value object that configs the log level of _log function.\n * @private\n */\nconst _logenv = {\n  MSG: true,\n  WALK_CONTENT: true,\n  WALK_CONTENT_TOP: true,\n  WALK_LOCK: true,\n  WALK_SCROLL: true,\n  ALL: true\n};\n\n/**\n * Log with context based in _logenv.\n * @param {string} context The context to dispatch this log.\n * @param {string} message The verbose message.\n * @param {*} [attrs] Optional custom metadatas to display.\n * @private\n */\nfunction _log(context, message, ...attrs) {\n  if (!!_logenv[context] || _logenv.ALL) console.log(context + ': ' + message, ...attrs);\n}\n\n/**\n * A class that configures an walkpoint.\n * @typedef {object} WalkPoint\n * @property {string|HTMLElement} target A selector or a pure Element that the walk will focus;\n * @property {string} content A HTML code that will be inserted on the walk-content container;\n * @property {string} [color] A CSS (rgb, rgba, hex, etc.) color specification that will paint the walk. #2196F3 is default;\n * @property {number} [opacity] A float number between 0 and 1, that will be used as the opacity of the walk. 0.9 is default;\n * @property {string} [acceptText] The text of the accept button of the walk;\n * @property {function} [onSet] A function that will be called when the walk content is setted;\n * @property {function} [onClose] A function that will be called when the walk is accepted;\n */\n\n/**\n * A material tour (eg Inbox from Google) for your site, enhancing the UX.\n * Basic usage:\n * ``` js\n * import MaterialWalkthrough from '@essetwide/material-walkthrough';\n *\n * MaterialWalkthrough.walk([\n *   {\n *     target: '#example1',\n *     content: 'My First Walkthrough!',\n *     acceptText: 'YEAH!'\n *   }\n * ]);\n * ```\n * @license Apache License 2.0.\n * @copyright Esset Software LTD.\n */\nexport default class MaterialWalkthrough {\n  /**\n   * Cache the current height size of the document.\n   * Calculated by `document.querySelector('html').offsetHeight` at `MaterialWalkthrough.to` method.\n   * @type {number}\n   */\n  static CURRENT_DOCUMENT_HEIGHT = 0;\n\n  /**\n   * Default color used if none is passed in the walkpoint.\n   * It need to be a valid HEX or RGB color because it will be useful on contrast calculations.\n   * @type {string}\n   */\n  static DEFAULT_COLOR = '#2196F3';\n\n  /**\n   * Default opacity used if none is passed in the walkpoint.\n   * It need to be a valid float between 0 and 1.\n   * @type {number}\n   */\n  static DEFAULT_OPACITY = 0.9;\n\n  /**\n   * Default accept text if none is passed in the walkpoint.\n   * @type {string}\n   */\n  static DEFAULT_ACCEPT_TEXT = 'Ok';\n\n  /**\n   * The duration of any animation. It needs to be the same as defined at the style.\n   * Is used in some timeouts to wait a specific transition.\n   * @type {number}\n   */\n  static TRANSITION_DURATION = 500;\n\n  // @TODO: Auto apply DISABLE_HUGE_ANIMATIONS=true in mobile enviroment.\n  /**\n   * Disable animations such as walk's moving and opening/closing. Only Opacity animations is used.\n   * It is useful for mobile\n   * Default is false.\n   * @type {boolean}\n   */\n  static DISABLE_HUGE_ANIMATIONS = false;\n\n  /**\n   * Enable small wrapper of walkthrough.\n   * @type {boolean}\n   */\n  static FORCE_SMALL_BORDER = false;\n\n  /**\n   * Minimal size of focus hole.\n   * @type {boolean}\n   */\n  static MIN_SIZE = 60;\n\n  /**\n   * Focus hole margin.\n   * @type {number}\n   */\n  static GUTTER = 20;\n\n  /**\n   * Main component template.\n   * @type {string}\n   */\n  static ELEMENT_TEMPLATE =\n    `<div id='walk-wrapper' class='${MaterialWalkthrough.DISABLE_HUGE_ANIMATIONS ? 'animations-disabled' : ''} ${MaterialWalkthrough.FORCE_SMALL_BORDER ? 'small' : ''}'>\n      <div id='walk-content-wrapper'>\n        <div id='walk-content'></div>\n        <button id='walk-action'></button>\n      </div>\n    </div>`;\n\n  /**\n   * Assigned to true after the component is settled into the document.\n   * @type {boolean}\n   */\n  static isInitialized = false;\n\n  /**\n   * Caches the wrapper element.\n   * @type {HTMLElement}\n   * @private\n   */\n  static _wrapper = null;\n\n  /**\n   * Caches the content text wrapper element.\n   * @type {HTMLElement}\n   * @private\n   */\n  static _contentWrapper = null;\n\n  /**\n   * Caches the content text element.\n   * @type {HTMLElement}\n   * @private\n   */\n  static _content = null;\n\n  /**\n   * Caches the action button element.\n   * @type {HTMLElement}\n   * @private\n   */\n  static _actionButton = null;\n\n  /**\n   * Contains the current walkthrough configuration.\n   * @type {{\n   *   updateHandler: Function,\n   *   mutationObserver: MutationObserver,\n   *   points: Array<WalkPoint>,\n   *   currentIndex: Integer,\n   *   onCloseCallback: Function\n   * }}\n   * @private\n   */\n  static _instance = {\n    updateHandler: null,\n    mutationObserver: null,\n    points: null,\n    currentIndex: null,\n    onCloseCallback: null,\n  };\n\n  /**\n   * Initialize the component in the document, appending `ELEMENT_TEMPLATE`,\n   * and initialize the element references (`_wrapper`, `_contentWrapper`, `_content`, `_actionButton`);\n   * @private\n   */\n  static _init() {\n    dom.appendTo(dom.get('body'), MaterialWalkthrough.ELEMENT_TEMPLATE);\n    MaterialWalkthrough._wrapper = dom.get('#walk-wrapper');\n    MaterialWalkthrough._contentWrapper = dom.get('#walk-content-wrapper');\n    MaterialWalkthrough._content = dom.get('#walk-content');\n    MaterialWalkthrough._actionButton = dom.get('#walk-action');\n\n    if (MaterialWalkthrough.DISABLE_HUGE_ANIMATIONS) dom.addClass(MaterialWalkthrough._wrapper, 'animations-disabled');\n    if (MaterialWalkthrough.FORCE_SMALL_BORDER) dom.addClass(MaterialWalkthrough._wrapper, 'small');\n\n    MaterialWalkthrough.isInitialized = true;\n  }\n\n  /***\n   * Set the opened walker to a target with the properties from walkPoint.\n   * @param {string|HTMLElement} target A query or a Element to target the walker\n   * @param {WalkPoint} walkPoint The properties for this walker\n   */\n  static _setWalker(walkPoint) {\n    let target = dom.get(walkPoint.target);\n    _log('MSG', '-------------------------------------');\n    _log('MSG', 'Setting a walk to #' + target.id);\n    _log('WALK_SETUP', 'Properties:\\n' + JSON.stringify(walkPoint, null, 2));\n\n    MaterialWalkthrough._setupListeners(target, walkPoint.onClose);\n\n    MaterialWalkthrough._locateTarget(target, () => {\n      MaterialWalkthrough._setProperties(walkPoint.content, walkPoint.color, walkPoint.opacity, walkPoint.acceptText);\n      dom.setStyle(MaterialWalkthrough._wrapper, {display: 'block'});\n\n      MaterialWalkthrough._renderFrame(target, () => {\n        dom.addClass(MaterialWalkthrough._wrapper, 'opened');\n        MaterialWalkthrough._renderContent(target, () => {\n          dom.removeClass(MaterialWalkthrough._wrapper, 'transiting');\n        });\n\n        // Little XGH\n        MaterialWalkthrough._renderContent(target, () => {\n          dom.removeClass(MaterialWalkthrough._wrapper, 'transiting');\n        });\n      });\n    });\n\n    _log('MSG', 'Walk created. Calling onSet() (if exists)');\n    if (!!walkPoint.onSet) walkPoint.onSet();\n  }\n\n  /***\n   * Create the function that updates the walker to a target\n   * @param {HTMLElement} target  The target to set the update function\n   * @returns {function} Update handler to call in the listeners\n   */\n  static _createUpdateHandler(target) {\n    _log('WALK_UPDATE', 'Creating UpdateHandler for #' + target.id);\n\n    const updateHandler = () => {\n      _log('MSG', 'Updating and rendering');\n      MaterialWalkthrough._locateTarget(target, () => {\n        MaterialWalkthrough._renderFrame(target, () => {\n          MaterialWalkthrough._renderContent(target);\n        });\n      });\n    };\n    updateHandler.toString = () => {\n      return 'updateHandler -> #' + target.id;\n    };\n    return updateHandler;\n  }\n\n  /***\n   * Setup the update listeners (onResize, MutationObserver) and the close callback.\n   * @param {HTMLElement} target The target to set the listeners\n   * @param {function} onClose Close callback\n   */\n  static _setupListeners(target, onClose) {\n    if (!!MaterialWalkthrough._instance.updateHandler) MaterialWalkthrough._flushListeners();\n    MaterialWalkthrough._instance.updateHandler = MaterialWalkthrough._createUpdateHandler(target);\n\n    window.addEventListener('resize', MaterialWalkthrough._instance.updateHandler);\n    MaterialWalkthrough._instance.mutationObserver = new MutationObserver(MaterialWalkthrough._instance.updateHandler);\n    MaterialWalkthrough._instance.mutationObserver.observe(document.body, {childList: true, subtree: true});\n\n    MaterialWalkthrough._actionButton.addEventListener('click', function actionCallback() {\n      const hasNext = !!MaterialWalkthrough._instance.points && !!MaterialWalkthrough._instance.points[MaterialWalkthrough._instance.currentIndex + 1];\n      const next = () => {\n        if (hasNext) {\n          MaterialWalkthrough._instance.currentIndex++;\n          MaterialWalkthrough._setWalker(\n            MaterialWalkthrough._instance.points[MaterialWalkthrough._instance.currentIndex]\n          );\n        } else {\n          MaterialWalkthrough._instance.currentIndex = 0;\n          MaterialWalkthrough._instance.points = null;\n          if (MaterialWalkthrough._instance.onCloseCallback) MaterialWalkthrough._instance.onCloseCallback();\n          MaterialWalkthrough._instance.onCloseCallback = null;\n          MaterialWalkthrough.closeWalker();\n        }\n        MaterialWalkthrough._actionButton.removeEventListener('click', actionCallback);\n      };\n\n      if (!!onClose) onClose();\n      // Responsive metrics (According the style.css)\n      // TODO: Refact this. Turn into a separated function.\n      dom.addClass(MaterialWalkthrough._wrapper, 'transiting');\n      setTimeout(() => {\n        next();\n      }, MaterialWalkthrough.TRANSITION_DURATION);\n    });\n  }\n\n  /***\n   * Clean the listeners with the actual updateHandler\n   */\n  static _flushListeners() {\n    _log('WALK_UPDATER', 'Flushing handlers\\n' + MaterialWalkthrough._instance.updateHandler);\n    if (!!MaterialWalkthrough._instance.mutationObserver) MaterialWalkthrough._instance.mutationObserver.disconnect();\n    MaterialWalkthrough._instance.mutationObserver = null;\n    window.removeEventListener('resize', MaterialWalkthrough._instance.updateHandler);\n  }\n\n  /***\n   * Set the properties for the walk.\n   * @param {string} content The content that will be displayed in the walk\n   * @param {string} color A CSS valid color\n   * @param {number} opacity A valid float between 0 and 1\n   * @param {string} acceptText The text that will be displayed in the accept button\n   */\n  static _setProperties(content, color, opacity, acceptText) {\n    color = !!color ? color : MaterialWalkthrough.DEFAULT_COLOR;\n    opacity = !!opacity ? opacity : MaterialWalkthrough.DEFAULT_OPACITY;\n    dom.setStyle(MaterialWalkthrough._wrapper, {borderColor: color, opacity: opacity});\n    MaterialWalkthrough._content.innerHTML = content;\n    MaterialWalkthrough._actionButton.innerHTML = acceptText || MaterialWalkthrough.DEFAULT_ACCEPT_TEXT;\n  }\n\n  // @TODO: Animate the scroll.\n  /***\n   * Centralize the scroll to a target.\n   * @param {HTMLElement} target\n   * @param {function} locateCallback\n   */\n  static _locateTarget(target, locateCallback) {\n    const top = target.offsetTop;\n    const windowHeight = window.innerHeight;\n    const maxScrollValue = MaterialWalkthrough.CURRENT_DOCUMENT_HEIGHT - window.innerHeight;\n\n    const {height, width} = target.getClientRects()[0];\n    let holeSize = height > width ? height : width;\n    const YCoordinate = top - (windowHeight / 2) + (holeSize / 2);\n    const secureYCoordinate = YCoordinate > maxScrollValue ? maxScrollValue : YCoordinate;\n\n\n    _log('WALK_LOCK', 'Moving Scroll to:', secureYCoordinate);\n    _log('WALK_LOCK', 'windowHeight:', windowHeight);\n    setTimeout(() => window.scrollTo(0, secureYCoordinate), 0);\n\n    // TODO: After the animation, timeout on callback\n    if (locateCallback) locateCallback();\n  }\n\n  /**\n   * Move the walk to a target.\n   * @param {HTMLElement} target\n   * @param {function} renderCallback\n   * @private\n   */\n  static _renderFrame(target, renderCallback) {\n    // HAVING ISSUES WITH THIS WAY TO GET POSITION IN SOME TESTS\n    // const position = { top: target.offsetTop, left: target.offsetLeft };\n    // Using this line.\n    const { height, width, top, left } = target.getClientRects()[0];\n\n    let holeSize = height > width ? height : width; // Catch the biggest measure\n    // Adjust with default min measure if it not higher than it\n    if (holeSize < MaterialWalkthrough.MIN_SIZE) holeSize = MaterialWalkthrough.MIN_SIZE;\n    _log('WALK_LOCK', 'Walk hole size ' + holeSize + 'px');\n\n    const positions = {\n      height: (holeSize + MaterialWalkthrough.GUTTER) + 'px',\n      width: (holeSize + MaterialWalkthrough.GUTTER) + 'px',\n\n      marginLeft: -((holeSize + MaterialWalkthrough.GUTTER) / 2) + 'px',\n      marginTop: -((holeSize + MaterialWalkthrough.GUTTER) / 2) + 'px',\n\n      left: (left + (width / 2)) + 'px',\n      top: (top + (height / 2)) + 'px',\n    };\n    dom.setStyle(MaterialWalkthrough._wrapper, positions);\n    _log('WALK_LOCK', 'Positioning \\n' + JSON.stringify(positions, 2));\n\n    setTimeout(function () {\n      renderCallback();\n    }, MaterialWalkthrough.TRANSITION_DURATION / 2);\n  }\n\n  /**\n   * Calculates the positions and render the content in the screen based in the space available around a target.\n   * @param {HTMLElement} target\n   * @param {function} renderCallback\n   * @private\n   */\n  static _renderContent(target, renderCallback) {\n    const position = MaterialWalkthrough._wrapper.getBoundingClientRect(); // target.getBoundingClientRect(); // target.getClientRects()[0];\n\n    const itCanBeRenderedInRight =\n      position.x + (MaterialWalkthrough._wrapper.offsetWidth - MaterialWalkthrough.GUTTER)\n      + MaterialWalkthrough._contentWrapper.offsetWidth < window.innerWidth;\n    const itCanBeRenderedInLeft = (position.x + MaterialWalkthrough.GUTTER) - MaterialWalkthrough._contentWrapper.offsetWidth > 0;\n\n    const itCanBeRenderedInTop =\n      position.y\n      - MaterialWalkthrough._contentWrapper.offsetHeight > 0;\n    const itCanBeRenderedInBottom =\n      position.y\n      + MaterialWalkthrough._contentWrapper.offsetHeight + MaterialWalkthrough._wrapper.offsetHeight\n      < window.innerHeight;\n\n    _log('WALK_CONTENT', 'itCanBeRenderedInRight: ' + itCanBeRenderedInRight);\n    _log('WALK_CONTENT', 'itCanBeRenderedInLeft: ' + itCanBeRenderedInLeft);\n    _log('WALK_CONTENT', 'itCanBeRenderedInTop: ' + itCanBeRenderedInTop);\n    _log('WALK_CONTENT', 'itCanBeRenderedInBottom: ' + itCanBeRenderedInBottom);\n\n    let left = '100%';\n    let top = '100%';\n    let marginTop = 0;\n    let marginLeft = 0;\n    let textAlign = 'left';\n\n    if (!itCanBeRenderedInRight) {\n      left = itCanBeRenderedInLeft ? '-' + MaterialWalkthrough._contentWrapper.offsetWidth + 'px'\n        : 'calc(50% - 100px)';\n      textAlign = itCanBeRenderedInLeft ? 'right' : 'center';\n      marginTop = itCanBeRenderedInLeft ? 0 : (itCanBeRenderedInBottom ? '20px' : '-20px');\n    }\n    if (!itCanBeRenderedInBottom) {\n      top = itCanBeRenderedInTop ? '-' + MaterialWalkthrough._contentWrapper.offsetHeight + 'px'\n        : MaterialWalkthrough._wrapper.offsetHeight / 2 - MaterialWalkthrough._contentWrapper.offsetHeight / 2 + 'px';\n      marginLeft = itCanBeRenderedInTop ? 0 : (!itCanBeRenderedInRight ? '-20px' : '20px');\n    }\n    dom.setStyle(MaterialWalkthrough._contentWrapper, {left, top, textAlign, marginTop, marginLeft});\n\n    if (renderCallback) renderCallback();\n  }\n\n  /***\n   * Do a walkthrough to a set of walkpoints.\n   * @param {Array<WalkPoint>} walkPoints A list of each walkpoint to move the walktrough.\n   * @param {function} callback Callback called when the walkthrough is closed.\n   */\n  static walk(walkPoints, callback) {\n    MaterialWalkthrough._instance.points = walkPoints;\n    MaterialWalkthrough._instance.currentIndex = 0;\n    MaterialWalkthrough._instance.onCloseCallback = callback;\n    MaterialWalkthrough.to(walkPoints[0]);\n  };\n\n  /***\n   * Open the walkthrough to a single walkpoint.\n   * @param {WalkPoint} walkPoint The configuration of the walkpoint\n   */\n  static to(walkPoint) {\n    MaterialWalkthrough.CURRENT_DOCUMENT_HEIGHT = document.querySelector('html').offsetHeight;\n    ScrollManager.disable();\n    if (!MaterialWalkthrough.isInitialized) MaterialWalkthrough._init();\n    dom.removeClass(MaterialWalkthrough._wrapper, 'closed');\n    MaterialWalkthrough._setWalker(walkPoint);\n  }\n\n  /***\n   * Close the walker and flush its Listeners.\n   */\n  static closeWalker() {\n    _log('MSG', 'Closing Walker');\n    MaterialWalkthrough._flushListeners();\n    ScrollManager.enable();\n\n    // This will centralize the walk while it animate the hole opening with 1000px size.\n    dom.setStyle(MaterialWalkthrough._wrapper, { marginTop: '-500px', marginLeft: '-500px', opacity: '' });\n    dom.addClass(MaterialWalkthrough._wrapper, 'closed');\n    setTimeout(() => {\n      dom.setStyle(MaterialWalkthrough._wrapper, {display: 'none'});\n      dom.removeClass(MaterialWalkthrough._wrapper, 'opened');\n      dom.removeClass(MaterialWalkthrough._wrapper, 'transiting');\n      _log('MSG', 'Walker Closed!');\n    }, MaterialWalkthrough.TRANSITION_DURATION);\n  }\n}\n"],"names":["DOMUtils","target","document","querySelector","element","properties","keys","forEach","val","style","content","tmpElt","createElement","innerHTML","appendChild","children","className","classList","remove","add","ScrollManager","e","window","event","preventDefault","returnValue","keyCode","setStyle","dom","get","preventDefaultForScrollKeys","addEventListener","onwheel","onmousewheel","ontouchmove","onkeydown","removeEventListener","_logenv","_log","context","message","attrs","ALL","log","MaterialWalkthrough","appendTo","ELEMENT_TEMPLATE","_wrapper","_contentWrapper","_content","_actionButton","DISABLE_HUGE_ANIMATIONS","addClass","FORCE_SMALL_BORDER","isInitialized","walkPoint","id","JSON","stringify","_setupListeners","onClose","_locateTarget","_setProperties","color","opacity","acceptText","display","_renderFrame","_renderContent","removeClass","onSet","updateHandler","toString","_instance","_flushListeners","_createUpdateHandler","mutationObserver","MutationObserver","observe","body","childList","subtree","actionCallback","hasNext","points","currentIndex","next","_setWalker","onCloseCallback","closeWalker","TRANSITION_DURATION","disconnect","DEFAULT_COLOR","DEFAULT_OPACITY","borderColor","DEFAULT_ACCEPT_TEXT","locateCallback","top","offsetTop","windowHeight","innerHeight","maxScrollValue","CURRENT_DOCUMENT_HEIGHT","getClientRects","height","width","holeSize","YCoordinate","secureYCoordinate","scrollTo","renderCallback","left","MIN_SIZE","positions","GUTTER","position","getBoundingClientRect","itCanBeRenderedInRight","x","offsetWidth","innerWidth","itCanBeRenderedInLeft","itCanBeRenderedInTop","y","offsetHeight","itCanBeRenderedInBottom","marginTop","marginLeft","textAlign","walkPoints","callback","to","disable","_init","enable"],"mappings":"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"}